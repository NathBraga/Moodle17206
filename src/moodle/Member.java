/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moodle;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Color;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import moodle17206.User;

/**
 *
 * @author USERPC
 */
public class Member extends javax.swing.JFrame {

    /**
     * Creates new form Member
     */
    public Member() {
        initComponents();
        ShowMembersInformations();
    }

        
    //making connection with database
     public Connection getConnection(){
      
      Connection con;
      
      try{
          con = (Connection) DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Moodle17206Nathalia","root","Veralice13$");
          //JOptionPane.showMessageDialog(null, "Connected with Database");
          return con;
          
      }catch (Exception e){
          e.printStackTrace();
          return null;
      }
     }

     //making a list to create a class to bring all the members informations
     public ArrayList<membersUser> selectMembersInformations(){
      
      ArrayList<membersUser> membersInformations = new ArrayList<membersUser>();
      Connection connection = getConnection();
      
      String selection = "SELECT * FROM Member";
      Statement st;
      ResultSet rs;
      
      try{
          st = connection.createStatement();
          rs = st.executeQuery(selection);
          membersUser userMembers;
          
          while(rs.next()){
              userMembers = new membersUser(rs.getString("MemberID"), rs.getString("MemberFullName"), rs.getString("MemberPhone"));
              membersInformations.add(userMembers);
          }
      }catch (Exception e){
          e.printStackTrace();
      }
      return membersInformations;
  }
    
    public void ShowMembersInformations(){
      
      ArrayList<membersUser> list = selectMembersInformations();
      DefaultTableModel model = (DefaultTableModel) membersTable.getModel();
      Object[] row = new Object[3];
      for(int i = 0; i < list.size(); i++){
          row[0] = list.get(i).getMemberID();
          row[1] = list.get(i).getMemberFullName();
          row[2] = list.get(i).getMemberPhone();
                            
          model.addRow(row);
          membersTable.setShowGrid(true);
          membersTable.setSelectionBackground(Color.blue);
        }
  }
 
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        membersID = new javax.swing.JTextField();
        membersName = new javax.swing.JTextField();
        membersPhone = new javax.swing.JTextField();
        membersADD = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        membersDelete = new javax.swing.JButton();
        membersUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        membersTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moodle/Icons/school.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 1, 24)); // NOI18N
        jLabel2.setText("Virtual Global College");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        jLabel3.setText("Members registration");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel4.setText("Member ID: ");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel5.setText("Member Full Name: ");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel6.setText("Member Phone: ");

        membersPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                membersPhoneKeyTyped(evt);
            }
        });

        membersADD.setBackground(new java.awt.Color(0, 204, 51));
        membersADD.setText("ADD");
        membersADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membersADDActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(0, 0, 255));
        Back.setText("BACK");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        membersDelete.setBackground(new java.awt.Color(255, 0, 0));
        membersDelete.setText("DELETE");
        membersDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membersDeleteActionPerformed(evt);
            }
        });

        membersUpdate.setBackground(new java.awt.Color(255, 255, 0));
        membersUpdate.setText("UPDATE");
        membersUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membersUpdateActionPerformed(evt);
            }
        });

        membersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MemberID", "Full Name", "Phone"
            }
        ));
        membersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                membersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(membersTable);

        jButton1.setBackground(new java.awt.Color(0, 204, 255));
        jButton1.setText("REFRESH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(membersID, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(membersName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(membersPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(membersDelete)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(membersUpdate)
                                .addGap(144, 144, 144))))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Back)))
                .addGap(183, 183, 183))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(membersADD, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(638, 638, 638))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(membersID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(membersName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(membersPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addComponent(membersADD)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(membersUpdate)
                                    .addComponent(membersDelete)
                                    .addComponent(jButton1)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(Back)))))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed

        this.dispose();
        
    }//GEN-LAST:event_BackActionPerformed

    private void membersADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membersADDActionPerformed
        
        //Code for ADD member
        DefaultTableModel model = (DefaultTableModel) membersTable.getModel(); 
            if (! membersID.getText().trim().equals("")){
                model.addRow(new Object[]{
                    membersID.getText(),
                    membersName.getText(),
                    membersPhone.getText(),
                                        
           });
            } else {
                JOptionPane.showMessageDialog(null, "It is missing Information");
                
            }
            
            
            String statement = "INSERT INTO Member VALUES(?,?,?)";    
        
       try{
            
            con = (Connection) DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Moodle17206Nathalia","root","Veralice13$");
            pst = (PreparedStatement) con.prepareStatement(statement);
            
            //take the informations typed in the fields in the Members Registration
            pst.setString(1, membersID.getText());
            pst.setString(2, membersName.getText());
            pst.setString(3, membersPhone.getText());
                        
            //execute the new member in the table           
            if(pst.executeUpdate() > 0){
            
                JOptionPane.showMessageDialog(null, "New Member Inserted!");
            }
           
                        
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
            
    }//GEN-LAST:event_membersADDActionPerformed

    private void membersUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membersUpdateActionPerformed

        // Code for Update member
        String sql = "UPDATE Member SET MemberFullName=?, MemberPhone=? WHERE (MemberID=?)";
       
       //This code will print a new row with the alterations/ updated and it is going to delete the old information just when open it again
            DefaultTableModel model = (DefaultTableModel) membersTable.getModel(); 
            if (!membersID.getText().trim().equals("")){
                model.addRow(new Object[]{
                    membersID.getText(),
                    membersName.getText(),
                    membersPhone.getText(),
           });
            } else {
                JOptionPane.showMessageDialog(null, "It is missing Information");
                
            }
            
      //Code updating the informations
        try{
                
            con = (Connection) DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Moodle17206Nathalia","root","Veralice13$");
            pst = (PreparedStatement) con.prepareStatement(sql);
         
            pst.setString(3, membersID.getText());
            
            pst.setString(1, membersName.getText());
            pst.setString(2, membersPhone.getText());
             
            //execute the new row with updated informations in the table           
            if(pst.executeUpdate() > 0){
              
                
                JOptionPane.showMessageDialog(null, "Check the old information and New Update!");          
            }
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }//GEN-LAST:event_membersUpdateActionPerformed

    private void membersDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membersDeleteActionPerformed

        //Code for Delete member
           try{
            String sql = "DELETE FROM Moodle17206Nathalia.Member WHERE MemberID = ?";
            con = (Connection) DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/Moodle17206Nathalia","root","Veralice13$");
            pst = (PreparedStatement) con.prepareStatement(sql);
            pst.setString(1, membersID.getText());
                                                   
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Member Deleted!");
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
            
        //I found my way to bring the table after Delete an information     
        this.dispose();
        Member mb = new Member();
        mb.setVisible(true);
        mb.pack();
        mb.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_membersDeleteActionPerformed

    private void membersPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_membersPhoneKeyTyped

        //just numbers are allowed to be typed in the Members Phone Field
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }

    }//GEN-LAST:event_membersPhoneKeyTyped

    private void membersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membersTableMouseClicked

        //When click in the information on one student, the student's information will be brought to the Fields to Add, Update or Delete
        int i = membersTable.getSelectedRow();
        TableModel model = membersTable.getModel();
        
        
        membersID.setText(model.getValueAt(i,0).toString());
        membersName.setText(model.getValueAt(i,1).toString());
        membersPhone.setText(model.getValueAt(i,2).toString());
        
    }//GEN-LAST:event_membersTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //Refresh
        this.dispose();
        Member mb = new Member();
        mb.setVisible(true);
        mb.pack();
        mb.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Member.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Member().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton membersADD;
    private javax.swing.JButton membersDelete;
    private javax.swing.JTextField membersID;
    private javax.swing.JTextField membersName;
    private javax.swing.JTextField membersPhone;
    private javax.swing.JTable membersTable;
    private javax.swing.JButton membersUpdate;
    // End of variables declaration//GEN-END:variables
}
